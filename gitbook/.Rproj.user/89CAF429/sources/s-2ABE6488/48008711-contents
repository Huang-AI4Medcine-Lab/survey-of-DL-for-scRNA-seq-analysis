

packages <- installed.packages()
lapply(packages, require, character.only = TRUE)

rm(list=ls())


################################################################################


setwd("D:/m6A_Code")


################################################################################

rm(list=ls())
# ls = list.files( paste0(getwd(), "/Data/SampleList"), pattern = ".txt")
# dir =  list.files( paste0(getwd(), "/Data/SampleList"), pattern = ".txt", full.names = T )
# SampleList = list()
# for(i in 1: length(ls)){
#   SampleList[[ls[i]]] = read.table(dir[i])
# }
# 
# saveRDS(SampleList, "SampleList.rds")
SampleList <- readRDS("D:/m6A_Code/SampleList.rds")
names(SampleList)

sel=9
type=c("peak", "motif", "deepm6A"); 
# peakdir=paste0("D:/m6A_Code/Data/MetDB_CellData/exomepeak/Homo_sapiens/human_hg19/"); k=1
# motifdir=paste0("D:/m6A_Code/Data/MetDB_CellData/MotifSites/[DRACH_motif]"); k=2
# deepm6Adir=FileID=paste0("D:/m6A_Code/Data/MetDB_CellData/Deep_m6A_Sites/"); k=3
# peakdir=paste0("D:/m6A_Code/Data/HumanTissueSample/peak/"); k=1
motifdir=paste0("D:/m6A_Code/Data/HumanTissueSample/MotifSites/[DRACH_motif]"); k=2
# motifdir=paste0("D:/m6A_Code/Data/MouseTissueSample/MotifSites/[DRACH_motif]"); k=2

Single_m6A_sites <- readRDS("D:/AnnotationData/SingleResolution_m6A_data/Single_m6A_sites.rds")
atlas =  data.frame( seqnames = Single_m6A_sites$chr, 
                     start=as.numeric(Single_m6A_sites$start), 
                     end=as.numeric(Single_m6A_sites$end), strand=Single_m6A_sites$strand)
atlas = atlas[atlas$seqnames != "chrM", ]
atlas=as_granges(atlas)


# fid = paste0(getwd(),"/Data/", strsplit(names(SampleList[sel]),".txt"), "_", type[k], ".rds")
fid = paste0(getwd(),"/Data/", strsplit(names(SampleList[sel]),".txt"), "_", type[k], "_ExpCount.rds")
df <- readRDS(fid)
if( length(levels(df$seqnames)) != 24 ){ df$seqnames = droplevels(df$seqnames) }

gr = as_granges(df)
gr = mutate(gr, Is_m6A_Atlas = countOverlaps(gr, atlas, ignore.strand=FALSE))
df$Is_m6A_Atlas = gr$Is_m6A_Atlas
startcol = ncol(df) + 1

sample_list = SampleList[[sel]]
for(i in 1:nrow(sample_list)){
  print(i)
  if(type[k]=="peak"){
    FileID = paste0(peakdir, sample_list[i,], "/exomePeak_output/[BED6]peak.bed")
    df1=read.table(FileID)
    colnames(df1) = c("seqnames", "start", "end", "name", "score", "strand")
  }else if(type[k]=="motif"){
    FileID = paste0(motifdir, sample_list[i,], ".rds")
    df1=readRDS(FileID)
    colnames(df1) = c("seqnames", "start", "end", "strand")
  }else if(type[k]=="deepm6A"){
    FileID = paste0(deepm6Adir, sample_list[i,], "_ip/CandidateSingleBasePeak.xls")
    df1=read.table(FileID); df1=df1[-c(1), ]
    colnames(df1) = c("seqnames", "start", "end", "name", "score", "strand", "motif")
  }
  
  
  df1 = df1[df1$seqnames=="chr1" |
              df1$seqnames=="chr2" |
              df1$seqnames=="chr3" |
              df1$seqnames=="chr4" |
              df1$seqnames=="chr5" |
              df1$seqnames=="chr6" |
              df1$seqnames=="chr7" |
              df1$seqnames=="chr8" |
              df1$seqnames=="chr9" |
              df1$seqnames=="chr10" |
              df1$seqnames=="chr11" |
              df1$seqnames=="chr12" |
              df1$seqnames=="chr13" |
              df1$seqnames=="chr14" |
              df1$seqnames=="chr15" |
              df1$seqnames=="chr16" |
              df1$seqnames=="chr17" |
              df1$seqnames=="chr18" |
              df1$seqnames=="chr19" |
              df1$seqnames=="chr20" |
              df1$seqnames=="chr21" |
              df1$seqnames=="chr22" |
              df1$seqnames=="chrX" |
              df1$seqnames=="chrY",  ]

  
  if( !is.null(df1$name) ){ df1 = df1[!is.na(df1$name), ] }
  
  df1$start = as.numeric(df1$start)
  df1$end = as.numeric(df1$end)
  
  if(type[k]=="motif"|type[k]=="deepm6A"){if( !identical(df1$start, df1$end) ){ df1$start = df1$start + 1 }}
  
  df1 = df1[order(df1$start, decreasing = F), ]
  df1 = df1[order(df1$seqnames, decreasing = F), ]
  rownames(df1) = NULL
  
  gr1 = GRanges(df1)
  if( !is.null(df1$score) ){gr1 = reduce_ranges_directed( gr1, score=max(score) )
  }else if( is.null(df1$score) ){gr1 = reduce_ranges_directed( gr1 )}
  
  gr = mutate(gr, overlap = countOverlaps(gr, gr1, ignore.strand=FALSE) )

  
  df = cbind(df, overlap = gr$overlap )
  colnames(df)[colnames(df)=="overlap"]=sample_list[i,]
  
}

df$overlap=rowSums(df[,c(startcol:ncol(df))])
df = df[, c(1:(startcol -1), ncol(df))]
df=df[order(df$start, decreasing = F),]
df=df[order(df$seqnames, decreasing = F),]
rownames(df) = NULL


# FileID=paste0("[overlap]", strsplit(names(SampleList[sel]),"_")[[1]][1], "_", nrow(sample_list),
#               "_", type[k], ".rds")
FileID=paste0("[overlap]", strsplit(names(SampleList[sel]),"_")[[1]][1], "_", nrow(sample_list),
              "_", type[k], "_ExpCounts.rds")
saveRDS(df, file=FileID)


################################################################################

rm(list=ls())
# ls = list.files( paste0(getwd(), "/Data/SampleList"), pattern = ".txt")
# dir =  list.files( paste0(getwd(), "/Data/SampleList"), pattern = ".txt", full.names = T )
# SampleList = list()
# for(i in 1: length(ls)){
#   SampleList[[ls[i]]] = read.table(dir[i])
# }
# 
# saveRDS(SampleList, "SampleList.rds")
SampleList <- readRDS("D:/m6A_Code/SampleList.rds")
names(SampleList)

sel1=2
sel2=7

type=c("peak", "motif", "deepm6A"); 
# peakdir=paste0("D:/m6A_Code/Data/MetDB_CellData/exomepeak/Homo_sapiens/human_hg19/"); k=1
motifdir=paste0("D:/m6A_Code/Data/MetDB_CellData/MotifSites/[DRACH_motif]"); k=2
# deepm6Adir=FileID=paste0("D:/m6A_Code/Data/MetDB_CellData/Deep_m6A_Sites/"); k=3
# peakdir=paste0("D:/m6A_Code/Data/HumanTissueSample/peak/"); k=1
motifdir=paste0("D:/m6A_Code/Data/HumanTissueSample/MotifSites/[DRACH_motif]"); k=2

Single_m6A_sites <- readRDS("D:/AnnotationData/SingleResolution_m6A_data/Single_m6A_sites.rds")
atlas =  data.frame( seqnames = Single_m6A_sites$chr, 
                     start=as.numeric(Single_m6A_sites$start), 
                     end=as.numeric(Single_m6A_sites$end), strand=Single_m6A_sites$strand)
atlas = atlas[atlas$seqnames != "chrM", ]
atlas=as_granges(atlas)


# fid = paste0(getwd(),"/Data/", strsplit(names(SampleList[sel]),".txt"), "_", type[k], ".rds")
fid = paste0(getwd(),"/Data/", 
             strsplit(names(SampleList[sel1]),".txt"), "_", 
             strsplit(names(SampleList[sel2]),".txt"), "_", 
             type[k], ".rds")
df <- readRDS(fid)
gr = as_granges(df)
gr = mutate(gr, Is_m6A_Atlas = countOverlaps(gr, atlas, ignore.strand=FALSE))
df$Is_m6A_Atlas = gr$Is_m6A_Atlas
startcol = ncol(df) + 1

# sample_list = SampleList[[sel]]
sample_list=SampleList[[sel1]]
motifdir=paste0("D:/m6A_Code/Data/MetDB_CellData/MotifSites/[DRACH_motif]"); k=2
for(i in 1:nrow(sample_list)){
  print(i)
  if(type[k]=="peak"){
    FileID = paste0(peakdir, sample_list[i,], "/exomePeak_output/[BED6]peak.bed")
    df1=read.table(FileID)
    colnames(df1) = c("seqnames", "start", "end", "name", "score", "strand")
  }else if(type[k]=="motif"){
    FileID = paste0(motifdir, sample_list[i,], ".rds")
    df1=readRDS(FileID)
    colnames(df1) = c("seqnames", "start", "end", "strand")
  }else if(type[k]=="deepm6A"){
    FileID = paste0(deepm6Adir, sample_list[i,], "_ip/CandidateSingleBasePeak.xls")
    df1=read.table(FileID); df1=df1[-c(1), ]
    colnames(df1) = c("seqnames", "start", "end", "name", "score", "strand", "motif")
  }
  
  df1 = df1[df1$seqnames=="chr1" |
              df1$seqnames=="chr2" |
              df1$seqnames=="chr3" |
              df1$seqnames=="chr4" |
              df1$seqnames=="chr5" |
              df1$seqnames=="chr6" |
              df1$seqnames=="chr7" |
              df1$seqnames=="chr8" |
              df1$seqnames=="chr9" |
              df1$seqnames=="chr10" |
              df1$seqnames=="chr11" |
              df1$seqnames=="chr12" |
              df1$seqnames=="chr13" |
              df1$seqnames=="chr14" |
              df1$seqnames=="chr15" |
              df1$seqnames=="chr16" |
              df1$seqnames=="chr17" |
              df1$seqnames=="chr18" |
              df1$seqnames=="chr19" |
              df1$seqnames=="chr20" |
              df1$seqnames=="chr21" |
              df1$seqnames=="chr22" |
              df1$seqnames=="chrX" |
              df1$seqnames=="chrY",  ]
  
  if( !is.null(df1$name) ){ df1 = df1[!is.na(df1$name), ] }
  
  df1$start = as.numeric(df1$start)
  df1$end = as.numeric(df1$end)
  
  if(type[k]=="motif"|type[k]=="deepm6A"){if( !identical(df1$start, df1$end) ){ df1$start = df1$start + 1 }}
  
  df1 = df1[order(df1$start, decreasing = F), ]
  df1 = df1[order(df1$seqnames, decreasing = F), ]
  rownames(df1) = NULL
  
  gr1 = GRanges(df1)
  if( !is.null(df1$score) ){gr1 = reduce_ranges_directed( gr1, score=max(score) )
  }else if( is.null(df1$score) ){gr1 = reduce_ranges_directed( gr1 )}
  
  gr = mutate(gr, overlap = countOverlaps(gr, gr1, ignore.strand=FALSE) )
  df = cbind(df, overlap = gr$overlap )
  colnames(df)[colnames(df)=="overlap"]=sample_list[i,]
}

sample_list=SampleList[[sel2]]
motifdir=paste0("D:/m6A_Code/Data/HumanTissueSample/MotifSites/[DRACH_motif]"); k=2
for(i in 1:nrow(sample_list)){
  print(i)
  if(type[k]=="peak"){
    FileID = paste0(peakdir, sample_list[i,], "/exomePeak_output/[BED6]peak.bed")
    df1=read.table(FileID)
    colnames(df1) = c("seqnames", "start", "end", "name", "score", "strand")
  }else if(type[k]=="motif"){
    FileID = paste0(motifdir, sample_list[i,], ".rds")
    df1=readRDS(FileID)
    colnames(df1) = c("seqnames", "start", "end", "strand")
  }else if(type[k]=="deepm6A"){
    FileID = paste0(deepm6Adir, sample_list[i,], "_ip/CandidateSingleBasePeak.xls")
    df1=read.table(FileID); df1=df1[-c(1), ]
    colnames(df1) = c("seqnames", "start", "end", "name", "score", "strand", "motif")
  }
  
  df1 = df1[df1$seqnames=="chr1" |
              df1$seqnames=="chr2" |
              df1$seqnames=="chr3" |
              df1$seqnames=="chr4" |
              df1$seqnames=="chr5" |
              df1$seqnames=="chr6" |
              df1$seqnames=="chr7" |
              df1$seqnames=="chr8" |
              df1$seqnames=="chr9" |
              df1$seqnames=="chr10" |
              df1$seqnames=="chr11" |
              df1$seqnames=="chr12" |
              df1$seqnames=="chr13" |
              df1$seqnames=="chr14" |
              df1$seqnames=="chr15" |
              df1$seqnames=="chr16" |
              df1$seqnames=="chr17" |
              df1$seqnames=="chr18" |
              df1$seqnames=="chr19" |
              df1$seqnames=="chr20" |
              df1$seqnames=="chr21" |
              df1$seqnames=="chr22" |
              df1$seqnames=="chrX" |
              df1$seqnames=="chrY",  ]
  
  if( !is.null(df1$name) ){ df1 = df1[!is.na(df1$name), ] }
  
  df1$start = as.numeric(df1$start)
  df1$end = as.numeric(df1$end)
  
  if(type[k]=="motif"|type[k]=="deepm6A"){if( !identical(df1$start, df1$end) ){ df1$start = df1$start + 1 }}
  
  df1 = df1[order(df1$start, decreasing = F), ]
  df1 = df1[order(df1$seqnames, decreasing = F), ]
  rownames(df1) = NULL
  
  gr1 = GRanges(df1)
  if( !is.null(df1$score) ){gr1 = reduce_ranges_directed( gr1, score=max(score) )
  }else if( is.null(df1$score) ){gr1 = reduce_ranges_directed( gr1 )}
  
  gr = mutate(gr, overlap = countOverlaps(gr, gr1, ignore.strand=FALSE) )
  df = cbind(df, overlap = gr$overlap )
  colnames(df)[colnames(df)=="overlap"]=sample_list[i,]
}

df$overlap=rowSums(df[,c(startcol:ncol(df))])
df = df[, c(1:(startcol -1), ncol(df))]
df=df[order(df$start, decreasing = F),]
df=df[order(df$seqnames, decreasing = F),]
rownames(df) = NULL

# FileID=paste0("[overlap]", strsplit(names(SampleList[sel]),"_")[[1]][1], "_", nrow(sample_list),
#               "_", type[k], ".rds")
FileID = paste0("[overlap]", 
             strsplit(names(SampleList[sel1]),".txt"), "_", 
             strsplit(names(SampleList[sel2]),".txt"), "_", 
             type[k], ".rds")
saveRDS(df, file=FileID)


stat=list()
FileID=paste0("[stat]",
              strsplit(names(SampleList[sel1]),".txt"), "_", 
              strsplit(names(SampleList[sel2]),".txt"), "_", 
              type[k], ".rds")

df$sample = as.factor(df$sample)
stat[[1]] = data.frame( sample = levels(df$sample), 
                        count = summary(df$sample, maxsum = length(levels(df$sample))) )
df = df[!duplicated(df$Tag), ]
df$overlap = as.factor(df$overlap)
stat[[2]] = data.frame(levels(df$overlap), summary(df$overlap, maxsum = length(levels(df$overlap)))  )
write_xlsx(stat, paste0(FileID, ".xlsx"), col_names = F) 
saveRDS(stat, paste0(FileID,".rds") )



##########################################################################

rm(list=ls())

ls=list.files(path = getwd(), pattern = "[[overlap]]", full.names = T)
ls


sel=6
allsites <- readRDS(ls[sel])

check <- function(x){if(!is.na(x)) {return(x)}else{return(0)}}
strsplit(ls[sel], "/")[[1]][3] %>% strsplit(., "_") %>% .[[1]] %>% .[2] %>% as.numeric(.) %>% 
  check(.) %>% assign("MaxNum", ., envir = .GlobalEnv) 
MaxNum = strsplit(ls[sel], "/")[[1]][3] %>% strsplit(., "_") %>% .[[1]] %>% .[4] %>% as.numeric(.) %>% 
  check(.) %>% sum(MaxNum, . )

allsites$Is_m6A_Atlas[allsites$Is_m6A_Atlas==1]=c("Yes")
allsites$Is_m6A_Atlas[allsites$Is_m6A_Atlas==0]=c("No")

class1 = allsites

ratio=(MaxNum/100); if(ratio<0.3){ratio=0.5}


tt= strsplit(ls[sel], "]")[[1]][2] %>% strsplit(., ".rds") %>% paste0( ., "_Stat_by_Sample" )
W=10*ratio
H=10*ratio
data3=data.frame()
class1$sample = as.factor(class1$sample)
data=as.data.frame(table(class1$sample))
colnames(data)=c("sample", "count")
class4 = class1[class1$Is_m6A_Atlas =="Yes",]
class4$sample = as.factor(class4$sample)
data2=as.data.frame(table(class4$sample))
colnames(data2)=c("sample", "count")
data3=rbind(cbind(class="All_Sites", data),
            cbind(class="m6A_atlas", data2) )
temp = data3 %>% mutate(sample = fct_reorder(sample, count) )
p=ggplot(temp, aes(x=sample, y=count, fill=class)) + geom_bar(stat="identity", position="dodge") +
  theme_bw() + 
  labs(title="", x="", y="# of sites", fill="") +
  theme(axis.text.x = element_text(hjust=1, size=9) ) +
  theme(axis.text.y = element_text(size=7.5) ) +
  geom_text(aes(label=count), size=1.8, fontface="bold", hjust=-0.05, 
            position = position_dodge(width = 1) ) +
  ylim(0, max(data3$count)*1.1) +
  theme(legend.position="top") +
  theme(legend.key.size = unit(0.45, 'cm')) +
  geom_hline(yintercept = mean(data3$count[data3$class=="All_Sites"]), linetype = "dashed",
             col="red", size=1, alpha=0.4) +
  annotate("text", x=2, y=round(mean(data3$count[data3$class=="All_Sites"])), 
           label=round(mean(data3$count[data3$class=="All_Sites"])),
           size=2, fontface="bold") +
  geom_hline(yintercept = mean(data3$count[data3$class=="m6A_atlas"]), linetype = "dashed",
             col="turquoise4", size=1, alpha=0.4) +
  annotate("text", x=2, y=round(mean(data3$count[data3$class=="m6A_atlas"])), 
           label=round(mean(data3$count[data3$class=="m6A_atlas"])),
           size=2, fontface="bold") +
  coord_flip() #+ theme(legend.position="none")
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)



################################################################################


rm(list=ls())

ls=list.files(path = getwd(), pattern = "[[overlap]]", full.names = T)
ls

sel=6
allsites <- readRDS(ls[sel])
check <- function(x){if(!is.na(x)) {return(x)}else{return(0)}}
strsplit(ls[sel], "/")[[1]][3] %>% strsplit(., "_") %>% .[[1]] %>% .[2] %>% as.numeric(.) %>% 
  check(.) %>% assign("MaxNum", ., envir = .GlobalEnv) 
MaxNum = strsplit(ls[sel], "/")[[1]][3] %>% strsplit(., "_") %>% .[[1]] %>% .[4] %>% as.numeric(.) %>% 
  check(.) %>% sum(MaxNum, . )


allsites$Is_m6A_Atlas[allsites$Is_m6A_Atlas==1]=c("Yes")
allsites$Is_m6A_Atlas[allsites$Is_m6A_Atlas==0]=c("No")


class1 = allsites
class1=class1[!duplicated(class1$Tag),]

ratio=(MaxNum/100); if(ratio<0.3){ratio=0.5}

tt= strsplit(ls[sel], "]")[[1]][2] %>% strsplit(., ".rds") %>% paste0( ., "_Stat_by_Overlap1" )
W=16*ratio
H=9*ratio
data3=data.frame()
class1data=as.data.frame(table(class1$overlap))
colnames(class1data)=c("overlap", "count")
class1data$overlap = as.numeric(class1data$overlap) 
class4 = class1[class1$Is_m6A_Atlas=="Yes",]
class4data=as.data.frame(table(class4$overlap))
colnames(class4data)=c("overlap", "count")
class4data$overlap = as.numeric(class4data$overlap) 
data3=rbind(cbind(class="allsites", class1data),
            cbind(class="m6Aatlas", class4data) )
p=ggplot(data3, aes(x=overlap, y=count, fill=class)) + geom_bar(stat="identity", position="dodge") +
  theme_bw() + 
  labs(y="# of sites", x="overlap==N", fill="") +
  # scale_x_discrete(name ="overlap", limits=xtick) +
  theme(axis.text.x = element_text(face="bold", size=9) ) +
  theme(axis.text.y = element_text(face="bold", size=9) ) +
  geom_text(aes(label=count, angle=90), fontface="bold", hjust=-0.05, size=2,
            position=position_dodge(width=1)) +
  ylim(0, max(data3$count)*1.1) +
  geom_vline(xintercept=MaxNum*0.9, linetype = "dashed", size=1, alpha=0.5) +
  annotate("text", x=MaxNum*0.9, y=max(class1data$count), label=paste0(round(MaxNum*0.9), "(~90%)")) +
  #theme(legend.position = "none") +
  theme(legend.key.size = unit(0.45, 'cm')) 
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)



tt= strsplit(ls[sel], "]")[[1]][2] %>% strsplit(., ".rds") %>% paste0( ., "_Stat_by_Overlap2" )
W=13*ratio
H=8*ratio
class1data=data.frame()
for(i in 1:max(class1$overlap)){
  df = class1[class1$overlap >= i, ]
  class1data[i,1] = i
  class1data[i,2] = nrow(df)
}
colnames(class1data) = c("overlap", "count")
class4 = class1[class1$Is_m6A_Atlas=="Yes",]
class4data=data.frame()
for(i in 1:max(class4$overlap)){
  df = class4[class4$overlap >= i, ]
  class4data[i,1] = i
  class4data[i,2] = nrow(df)
}
colnames(class4data) = c("overlap", "count")
data3=data.frame()
data3=rbind(cbind(class="allsites", class1data),
            cbind(class="m6Aatlas", class4data) )
# xtick=seq(1:MaxNum)
# xtick = as.character(xtick)
p=ggplot(data3, aes(x=overlap, y=count, fill=class)) + geom_bar(stat="identity", position="dodge") +
  theme_bw() + 
  labs(y="# of sites", x="overlap>=N", fill="") +
  # scale_x_discrete(name ="overlap", limits=xtick) +
  theme(axis.text.x = element_text(face="bold", size=9) ) +
  theme(axis.text.y = element_text(face="bold", size=9) ) +
  geom_text(aes(label=count, angle=90), size=1.8, fontface="bold", hjust=0.05,
            position=position_dodge(width=1)) +
  ylim(0, max(data3$count)*1.1) +
  geom_vline(xintercept=MaxNum*0.9, linetype = "dashed", size=1, alpha=0.5) +
  annotate("text", x=MaxNum*0.9, y=max(class1data$count), label=paste0(round(MaxNum*0.9), "(~90%)")) +
  # geom_hline(yintercept = mean(data3$count[data3$class=="allsites"]), linetype = "dashed",
             # col="red", size=1, alpha=0.4) +
  # annotate("text", x= max(data3$overlap), y=round(mean(data3$count[data3$class=="allsites"])), 
  #          label=paste0("mean(all): ", round(mean(data3$count[data3$class=="allsites"]))),
  #          size=2, fontface="bold") +
  # geom_hline(yintercept = mean(data3$count[data3$class=="m6Aatlas"]), linetype = "dashed",
             # col="turquoise4", size=1, alpha=0.4) +
  # annotate("text", x= max(data3$overlap), y=round(mean(data3$count[data3$class=="m6Aatlas"])), 
  #          label=paste0("mean(m6Aatlas): ", round(mean(data3$count[data3$class=="m6Aatlas"]))),
  #          size=2, fontface="bold") +
  theme(legend.position = "top") +
  theme(legend.key.size = unit(0.45, 'cm')) 
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)

















