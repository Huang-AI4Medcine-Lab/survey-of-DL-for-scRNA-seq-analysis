

packages <- installed.packages()
lapply(packages, require, character.only = TRUE)

rm(list=ls())


################################################################################


setwd("D:/m6A_Code")


################################################################################


## deepm6A data

rm(list=ls())
# ls = list.files( paste0(getwd(), "/Data/SampleList"), pattern = ".txt")
# dir =  list.files( paste0(getwd(), "/Data/SampleList"), pattern = ".txt", full.names = T )
# SampleList = list()
# for(i in 1: length(ls)){
#   SampleList[[ls[i]]] = read.table(dir[i])
# }
# 
# saveRDS(SampleList, "SampleList.rds")
SampleList <- readRDS("D:/m6A_Code/SampleList.rds"); sel=1
# names(SampleList)
# [1] "CellSampleList.txt"                    
# [2] "CellSampleList_WT_Only.txt"            
# [3] "CellSampleList_WT_Only_PeakThr_10K.txt"
# [4] "CellSampleList_WT_unique.txt"          
# [5] "TissueSampleList.txt"                  
# [6] "TissueSampleList_38.txt"               
# [7] "TissueSampleList_unique_35.txt"


type=c("peak", "motif", "deepm6A"); 
# peakdir=paste0("D:/m6A_Code/Data/MetDB_CellData/exomepeak/Homo_sapiens/human_hg19/"); k=1
# motifdir=paste0("D:/m6A_Code/Data/MetDB_CellData/MotifSites/[DRACH_motif]"); k=2
deepm6Adir=FileID=paste0("D:/m6A_Code/Data/MetDB_CellData/Deep_m6A_Sites/"); k=3
# peakdir=paste0("D:/m6A_Code/Data/HumanTissueSample/peak/"); k=1
# motifdir=paste0("D:/m6A_Code/Data/HumanTissueSample/MotifSites/[DRACH_motif]"); k=2



Single_m6A_sites <- readRDS("D:/AnnotationData/SingleResolution_m6A_data/Single_m6A_sites.rds")
atlas =  data.frame( seqnames = Single_m6A_sites$chr, 
                     start=as.numeric(Single_m6A_sites$start), 
                     end=as.numeric(Single_m6A_sites$end), strand=Single_m6A_sites$strand)
atlas = atlas[atlas$seqnames != "chrM", ]
atlas=as_granges(atlas)


fid = paste0(getwd(),"/Data/", strsplit(names(SampleList[sel]),".txt"), "_", type[k], ".rds")
df <- readRDS(fid)
gr = as_granges(df)
gr = mutate(gr, Is_m6A_Atlas = countOverlaps(gr, atlas, ignore.strand=FALSE))
df$Is_m6A_Atlas = gr$Is_m6A_Atlas
startcol = ncol(df) + 1

sample_list = SampleList[[sel]]
for(i in 1:nrow(sample_list)){
  print(i)
  if(type[k]=="peak"){
    FileID = paste0(peakdir, sample_list[i,], "/exomePeak_output/[BED6]peak.bed")
    df1=read.table(FileID)
    colnames(df1) = c("seqnames", "start", "end", "name", "score", "strand")
  }else if(type[k]=="motif"){
    FileID = paste0(motifdir, sample_list[i,], ".rds")
    df1=readRDS(FileID)
    colnames(df1) = c("seqnames", "start", "end", "strand")
  }else if(type[k]=="deepm6A"){
    FileID = paste0(deepm6Adir, sample_list[i,], "_ip/CandidateSingleBasePeak.xls")
    df1=read.table(FileID); df1=df1[-c(1), ]
    colnames(df1) = c("seqnames", "start", "end", "name", "score", "strand", "motif")
  }
  
  df1 = df1[df1$seqnames=="chr1" |
              df1$seqnames=="chr2" |
              df1$seqnames=="chr3" |
              df1$seqnames=="chr4" |
              df1$seqnames=="chr5" |
              df1$seqnames=="chr6" |
              df1$seqnames=="chr7" |
              df1$seqnames=="chr8" |
              df1$seqnames=="chr9" |
              df1$seqnames=="chr10" |
              df1$seqnames=="chr11" |
              df1$seqnames=="chr12" |
              df1$seqnames=="chr13" |
              df1$seqnames=="chr14" |
              df1$seqnames=="chr15" |
              df1$seqnames=="chr16" |
              df1$seqnames=="chr17" |
              df1$seqnames=="chr18" |
              df1$seqnames=="chr19" |
              df1$seqnames=="chr20" |
              df1$seqnames=="chr21" |
              df1$seqnames=="chr22" |
              df1$seqnames=="chrX" |
              df1$seqnames=="chrY",  ]
  
  if( !is.null(df1$name) ){ df1 = df1[!is.na(df1$name), ] }

  df1$start = as.numeric(df1$start)
  df1$end = as.numeric(df1$end)
  
  if(type[k]=="motif"|type[k]=="deepm6A"){if( !identical(df1$start, df1$end) ){ df1$start = df1$start + 1 }}
  
  df1 = df1[order(df1$start, decreasing = F), ]
  df1 = df1[order(df1$seqnames, decreasing = F), ]
  rownames(df1) = NULL
  
  gr1 = GRanges(df1)
  if( !is.null(df1$score) ){gr1 = reduce_ranges_directed( gr1, score=max(score) )
  }else if( is.null(df1$score) ){gr1 = reduce_ranges_directed( gr1 )}

  gr = mutate(gr, overlap = countOverlaps(gr, gr1, ignore.strand=FALSE) )
  df = cbind(df, overlap = gr$overlap )
  colnames(df)[colnames(df)=="overlap"]=sample_list[i,]
}
 


df$overlap=rowSums(df[,c(startcol:ncol(df))])
df = df[, c(1:(startcol -1), ncol(df))]
df=df[order(df$start, decreasing = F),]
df=df[order(df$seqnames, decreasing = F),]
rownames(df) = NULL




FileID=paste0(strsplit(names(SampleList[sel]),"List.txt"), "_", nrow(sample_list),
              "_", type[k], "_overlap.rds")
saveRDS(df, file=FileID)


FileID=paste0("[stat]", strsplit(names(SampleList[sel]),"List.txt"), "_", nrow(sample_list),
              "_", type[k], "_overlap")
stat=list()
df$sample = as.factor(df$sample)
stat[[1]] = data.frame(levels(df$sample), summary(df$sample) )
df = df[!duplicated(df$Tag), ]
df$overlap = as.factor(df$overlap)
stat[[2]] = data.frame(levels(df$overlap), summary(df$overlap) )
write_xlsx(stat, paste0(FileID, ".xlsx"), col_names = F) 
saveRDS(stat, paste0(FileID,"rds") )



##########################################################################

rm(list=ls())
allsites <- readRDS("D:/m6A_Code/CellSample_19_Deepm6A_Sites.rds")
# allsites <- readRDS("D:/m6A_Code/CellSample_48_Deepm6A_Sites.rds")

allsites$Is_m6A_Atlas[allsites$Is_m6A_Atlas==1]=c("Yes")
allsites$Is_m6A_Atlas[allsites$Is_m6A_Atlas==0]=c("No")

MaxNum = 19


class1 = allsites

tt=paste0("CellSample_", MaxNum, "_Deepm6A_Sites_by_Sample1")
W=8
H=5
class1$sample = as.factor(class1$sample)
data=as.data.frame(table(class1$sample))
colnames(data)=c("sample", "count")
p=ggplot(data, aes(x=sample, y=count, fill=count)) + geom_bar(stat="identity") +
  theme_bw() + 
  labs(title="", x="", y="# of sites") +
  theme(axis.text.x = element_text(angle=65, hjust=1, size=9) ) +
  theme(axis.text.y = element_text(size=10) ) +
  geom_text(aes(label=count, angle=90), size=3, fontface="bold", hjust=-0.05) +
  ylim(0, max(data$count)*1.5) +
  theme(legend.position="none")
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)

tt=paste0("CellSample_", MaxNum, "_Deepm6A_Sites_by_Sample2")
W=8
H=5
class4 = class1[class1$Is_m6A_Atlas =="Yes",]
class4$sample = as.factor(class4$sample)
data2=as.data.frame(table(class4$sample))
colnames(data2)=c("sample", "count")
p=ggplot(data2, aes(x=sample, y=count, fill=count)) + geom_bar(stat="identity") +
  theme_bw() + 
  labs(title="", x="", y="# of sites") +
  theme(axis.text.x = element_text(angle=65, hjust=1, size=9) ) +
  theme(axis.text.y = element_text(size=10) ) +
  geom_text(aes(label=count, angle=90), size=3, fontface="bold", hjust=-0.05) +
  ylim(0, max(data2$count)*1.2) +
  theme(legend.position="none")
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)


tt=paste0("CellSample_", MaxNum, "_Deepm6A_Sites_by_Sample3")
W=8
H=5
data3=data.frame()
class1$sample = as.factor(class1$sample)
data=as.data.frame(table(class1$sample))
colnames(data)=c("sample", "count")
class4 = class1[class1$Is_m6A_Atlas =="Yes",]
class4$sample = as.factor(class4$sample)
data2=as.data.frame(table(class4$sample))
colnames(data2)=c("sample", "count")
data3=rbind(cbind(class="All_Sites", data),
            cbind(class="m6A_atlas", data2) )
p=ggplot(data3, aes(x=sample, y=count, fill=class)) + geom_bar(stat="identity", position="dodge") +
  theme_bw() + 
  labs(title="", x="", y="# of sites", fill="") +
  theme(axis.text.x = element_text(angle=65, hjust=1, size=9) ) +
  theme(axis.text.y = element_text(size=10) ) +
  geom_text(aes(label=count, angle=90), size=2.5, fontface="bold", hjust=-0.05, 
            position = position_dodge(width = 0.9) ) +
  ylim(0, max(data3$count)*1.2) +
  theme(legend.position="top")
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)



################################################################################


rm(list=ls())
allsites <- readRDS("D:/m6A_Code/CellSample_19_Deepm6A_Sites.rds")
# allsites <- readRDS("D:/m6A_Code/CellSample_48_Deepm6A_Sites.rds")

allsites$Is_m6A_Atlas[allsites$Is_m6A_Atlas==1]=c("Yes")
allsites$Is_m6A_Atlas[allsites$Is_m6A_Atlas==0]=c("No")

MaxNum = 19


# class1 = as_granges(allsites)
# class1 = reduce_ranges_directed(class1, Is_m6A_Atlas = max(Is_m6A_Atlas), overlap = max(overlap))
# class1 = as.data.frame(class1)

class1=allsites
class1=class1[!duplicated(class1$Tag),]


## Sites_VS_Overlaps
tt=paste0("CellSample_", MaxNum, "_Common_Deepm6A_Sites1")
W=8
H=5
class1data=as.data.frame(table(class1$overlap))
colnames(class1data)=c("overlap", "count")
class1data$overlap = as.numeric(class1data$overlap) 
p=ggplot(class1data, aes(x=overlap, y=count, fill=count)) + geom_bar(stat="identity") +
  theme_bw() + 
  labs(y="# of sites") +
  theme(axis.text.x = element_text(size=12) ) +
  theme(axis.text.y = element_text(size=12) ) +
  geom_text(aes(label=count, angle=90), size=3.5, fontface="bold", hjust=-0.05) +
  ylim(0, max(class1data$count)*1.2) +
  geom_vline(xintercept=MaxNum*0.85, col="red", linetype = "dashed", size=1, alpha=0.5) +
  annotate("text", x=MaxNum*0.85, y=max(class1data$count), label=c("85% Overlaps")) +
  theme(legend.position="none")
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)


tt=paste0("CellSample_", MaxNum, "_Common_Deepm6A_Sites2")
W=8
H=5
class4 = class1[class1$Is_m6A_Atlas=="Yes",]
class4data=as.data.frame(table(class4$overlap))
colnames(class4data)=c("overlap", "count")
class4data$overlap = as.numeric(class4data$overlap) 
p=ggplot(class4data, aes(x=overlap, y=count, fill=count)) + geom_bar(stat="identity") +
  theme_bw() + 
  labs(y="# of sites") +
  theme(axis.text.x = element_text(size=12) ) +
  theme(axis.text.y = element_text(size=12) ) +
  geom_text(aes(label=count, angle=90), size=3.5, fontface="bold", hjust=-0.05) +
  ylim(0, max(class4data$count)*1.2) +
  geom_vline(xintercept=MaxNum*0.85, col="red", linetype = "dashed", size=1, alpha=0.5) +
  annotate("text", x=MaxNum*0.85, y=max(class4data$count), label=c("85% Overlaps")) +
  theme(legend.position="none")
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)



tt=paste0("CellSample_", MaxNum, "_Common_Deepm6A_Sites3")
W=9
H=5
data3=data.frame()
class1data=as.data.frame(table(class1$overlap))
colnames(class1data)=c("overlap", "count")
class1data$overlap = as.numeric(class1data$overlap) 
class4 = class1[class1$Is_m6A_Atlas=="Yes",]
class4data=as.data.frame(table(class4$overlap))
colnames(class4data)=c("overlap", "count")
class4data$overlap = as.numeric(class4data$overlap) 
data3=rbind(cbind(class="allsites", class1data),
            cbind(class="m6Aatlas", class4data) )
# xtick=seq(1:MaxNum)
# xtick = as.character(xtick)
p=ggplot(data3, aes(x=overlap, y=count, fill=class)) + geom_bar(stat="identity", position="dodge") +
  theme_bw() + 
  labs(y="# of sites", fill="") +
  # scale_x_discrete(name ="overlap", limits=xtick) +
  theme(axis.text.x = element_text(face="bold", size=9) ) +
  theme(axis.text.y = element_text(face="bold", size=9) ) +
  geom_text(aes(label=count, angle=90), size=2.5, fontface="bold", hjust=-0.05,
            position=position_dodge(width=1)) +
  ylim(0, max(data3$count)*1.1) +
  geom_vline(xintercept=MaxNum*0.85, col="red", linetype = "dashed", size=1, alpha=0.5) +
  annotate("text", x=MaxNum*0.85, y=max(class1data$count), label=c("85% Overlaps")) +
  theme(legend.position = "top")
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)



















