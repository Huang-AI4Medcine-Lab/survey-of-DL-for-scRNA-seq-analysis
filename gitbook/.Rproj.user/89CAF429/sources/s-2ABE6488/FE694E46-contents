

packages <- installed.packages()
lapply(packages, require, character.only = TRUE)

rm(list=ls())


################################################################################


setwd("D:/m6A_Code")


################################################################################


## Deepm6A sites from Cell and DRACH motif sites from Tissue

rm(list=ls())
cell_list=read.table(paste0(getwd(),"/Data/CellSampleList_WT_Only_PeakThr_10K_Sample19.txt"))
tissue_list=read.table(paste0(getwd(),"/Data/TissueSampleList_29.txt"))
# tissue_list=read.table(paste0(getwd(),"/Data/TissueSampleList_38.txt"))
# cell_list=read.table(paste0(getwd(),"/Data/CellSampleList_WT_Only_PeakThr_10K.txt"))


Single_m6A_sites <- readRDS("D:/AnnotationData/SingleResolution_m6A_data/Single_m6A_sites.rds")
atlas =  data.frame( seqnames = Single_m6A_sites$chr, 
                     start=as.numeric(Single_m6A_sites$start), 
                     end=as.numeric(Single_m6A_sites$end), strand=Single_m6A_sites$strand)
atlas = atlas[atlas$seqnames != "chrM", ]
atlas=as_granges(atlas)


combined=data.frame()
for(i in 1:nrow(cell_list)){
  print(i)
  FileID=paste0("D:/m6A_Code/Data/MetDB_CellData/Deep_m6A_Sites/",
                cell_list[i,],"_ip/CandidateSingleBasePeak.rds")
  df1=readRDS(FileID)
  colnames(df1) = c("seqnames", "start", "end", "name", "score", "strand", "motif")
  
  df1 = df1[df1$seqnames=="chr1" |
              df1$seqnames=="chr2" |
              df1$seqnames=="chr3" |
              df1$seqnames=="chr4" |
              df1$seqnames=="chr5" |
              df1$seqnames=="chr6" |
              df1$seqnames=="chr7" |
              df1$seqnames=="chr8" |
              df1$seqnames=="chr9" |
              df1$seqnames=="chr10" |
              df1$seqnames=="chr11" |
              df1$seqnames=="chr12" |
              df1$seqnames=="chr13" |
              df1$seqnames=="chr14" |
              df1$seqnames=="chr15" |
              df1$seqnames=="chr16" |
              df1$seqnames=="chr17" |
              df1$seqnames=="chr18" |
              df1$seqnames=="chr19" |
              df1$seqnames=="chr20" |
              df1$seqnames=="chr21" |
              df1$seqnames=="chr22" |
              df1$seqnames=="chrX" |
              df1$seqnames=="chrY",  ]
  
  
  df1 = df1[!is.na(df1$name), ]
  
  df1$start = as.numeric(df1$start)
  df1$end = as.numeric(df1$end)
  df1$start = df1$start + 1
  
  df1 = df1[order(df1$start, decreasing = F), ]
  df1 = df1[order(df1$seqnames, decreasing = F), ]
  rownames(df1) = NULL
  
  gr1 = GRanges(df1)
  gr1 = reduce_ranges_directed( gr1, score=max(score) )
  
  df1 = as.data.frame(gr1)
  df1$strand = as.character(df1$strand)
  df1$strand[df1$strand=="+"] = "p"
  df1$strand[df1$strand=="-"] = "n"  
  df1$Tag = paste0(df1$seqnames, "_", df1$start, "_", df1$strand)
  
  df1$strand[df1$strand=="p"] = "+"
  df1$strand[df1$strand=="n"] = "-" 
  
  gr1 = mutate(gr1, Is_m6A_Atlas = countOverlaps(gr1, atlas, ignore.strand=FALSE))
  df1$Is_m6A_Atlas = gr1$Is_m6A_Atlas
  
  startcol = ncol(df1) + 1
  
  for( j in 1:nrow(cell_list)){
    if( j != i ){
      FileID=paste0("D:/m6A_Code/Data/MetDB_CellData/Deep_m6A_Sites/",
                    cell_list[j,],"_ip/CandidateSingleBasePeak.rds")
      df2=readRDS(FileID)
      colnames(df2) = c("seqnames", "start", "end", "name", "score", "strand", "motif")
      
      df2 = df2[df2$seqnames=="chr1" |
                  df2$seqnames=="chr2" |
                  df2$seqnames=="chr3" |
                  df2$seqnames=="chr4" |
                  df2$seqnames=="chr5" |
                  df2$seqnames=="chr6" |
                  df2$seqnames=="chr7" |
                  df2$seqnames=="chr8" |
                  df2$seqnames=="chr9" |
                  df2$seqnames=="chr10" |
                  df2$seqnames=="chr11" |
                  df2$seqnames=="chr12" |
                  df2$seqnames=="chr13" |
                  df2$seqnames=="chr14" |
                  df2$seqnames=="chr15" |
                  df2$seqnames=="chr16" |
                  df2$seqnames=="chr17" |
                  df2$seqnames=="chr18" |
                  df2$seqnames=="chr19" |
                  df2$seqnames=="chr20" |
                  df2$seqnames=="chr21" |
                  df2$seqnames=="chr22" |
                  df2$seqnames=="chrX" |
                  df2$seqnames=="chrY",  ]
      
      df2 = df2[!is.na(df2$name), ]
      
      df2$start = as.numeric(df2$start)
      df2$end = as.numeric(df2$end)
      df2$start = df2$start + 1
      
      df2 = df2[order(df2$start, decreasing = F), ]
      df2 = df2[order(df2$seqnames, decreasing = F), ]
      rownames(df2) = NULL
      
      gr2 = GRanges(df2)
      gr2 = reduce_ranges_directed( gr2, score=max(score) )
      
      gr1 = mutate(gr1, overlap = countOverlaps(gr1, gr2, ignore.strand=FALSE) )
      df1 = cbind(df1, overlap = gr1$overlap )
      colnames(df1)[colnames(df1)=="overlap"]= paste0("Cell_",cell_list[j,])
    }
  }
  
  
  for( j in 1:nrow(tissue_list)){
      FileID=paste0("D:/m6A_Code/Data/HumanTissueSample/MotifSites/[DRACH_motif]",
                    tissue_list[j,],".rds")
      df2=readRDS(FileID)
      # colnames(df2) = c("seqnames", "start", "end", "name", "score", "strand", "motif")
      colnames(df2) = c("seqnames", "start", "end", "strand")
      
      df2 = df2[df2$seqnames=="chr1" |
                  df2$seqnames=="chr2" |
                  df2$seqnames=="chr3" |
                  df2$seqnames=="chr4" |
                  df2$seqnames=="chr5" |
                  df2$seqnames=="chr6" |
                  df2$seqnames=="chr7" |
                  df2$seqnames=="chr8" |
                  df2$seqnames=="chr9" |
                  df2$seqnames=="chr10" |
                  df2$seqnames=="chr11" |
                  df2$seqnames=="chr12" |
                  df2$seqnames=="chr13" |
                  df2$seqnames=="chr14" |
                  df2$seqnames=="chr15" |
                  df2$seqnames=="chr16" |
                  df2$seqnames=="chr17" |
                  df2$seqnames=="chr18" |
                  df2$seqnames=="chr19" |
                  df2$seqnames=="chr20" |
                  df2$seqnames=="chr21" |
                  df2$seqnames=="chr22" |
                  df2$seqnames=="chrX" |
                  df2$seqnames=="chrY",  ]
      
      if( !is.null(df2$name) ){ df2 = df2[!is.na(df2$name), ] }
      
      df2$start = as.numeric(df2$start)
      df2$end = as.numeric(df2$end)
      if( !identical(df2$start, df2$end) ){ df2$start = df2$start + 1 }
      
      df2 = df2[order(df2$start, decreasing = F), ]
      df2 = df2[order(df2$seqnames, decreasing = F), ]
      rownames(df2) = NULL
      
      gr2 = GRanges(df2)
      
      if( !is.null(df2$score) ){gr2 = reduce_ranges_directed( gr1, score=max(score) )
      }else if( is.null(df2$score) ){gr2 = reduce_ranges_directed( gr2 )}
      
      
      gr1 = mutate(gr1, overlap = countOverlaps(gr1, gr2, ignore.strand=FALSE) )
      df1 = cbind(df1, overlap = gr1$overlap )
      colnames(df1)[colnames(df1)=="overlap"]=paste0("Tissue_", tissue_list[j,])
  }

  df1$overlap=rowSums(df1[,c(startcol:ncol(df1))])
  
  df1 = df1[, c(1:(startcol -1), ncol(df1))]
  df1 = cbind(type="cell", sample=cell_list[i,], df1)
  combined = rbind.data.frame(combined, df1)
}

combined = combined[, -c(8)]

for(i in 1:nrow(tissue_list)){
  print(i)
  FileID=paste0("D:/m6A_Code/Data/HumanTissueSample/MotifSites/[DRACH_motif]",
                tissue_list[i,],".rds")
  df1=readRDS(FileID)
  # colnames(df1) = c("seqnames", "start", "end", "name", "score", "strand", "motif")
  colnames(df1) = c("seqnames", "start", "end", "strand")
  
  df1 = df1[df1$seqnames=="chr1" |
              df1$seqnames=="chr2" |
              df1$seqnames=="chr3" |
              df1$seqnames=="chr4" |
              df1$seqnames=="chr5" |
              df1$seqnames=="chr6" |
              df1$seqnames=="chr7" |
              df1$seqnames=="chr8" |
              df1$seqnames=="chr9" |
              df1$seqnames=="chr10" |
              df1$seqnames=="chr11" |
              df1$seqnames=="chr12" |
              df1$seqnames=="chr13" |
              df1$seqnames=="chr14" |
              df1$seqnames=="chr15" |
              df1$seqnames=="chr16" |
              df1$seqnames=="chr17" |
              df1$seqnames=="chr18" |
              df1$seqnames=="chr19" |
              df1$seqnames=="chr20" |
              df1$seqnames=="chr21" |
              df1$seqnames=="chr22" |
              df1$seqnames=="chrX" |
              df1$seqnames=="chrY",  ]
  
  if( !is.null(df1$name) ){ df1 = df1[!is.na(df1$name), ] }
  
  df1$start = as.numeric(df1$start)
  df1$end = as.numeric(df1$end)
  if( !identical(df1$start, df1$end) ){ df1$start = df1$start + 1 }
  
  df1 = df1[order(df1$start, decreasing = F), ]
  df1 = df1[order(df1$seqnames, decreasing = F), ]
  rownames(df1) = NULL
  
  gr1 = GRanges(df1)
  
  if( !is.null(df1$score) ){gr1 = reduce_ranges_directed( gr1, score=max(score) )
  }else if( is.null(df1$score) ){gr1 = reduce_ranges_directed( gr1 )}
  
  df1 = as.data.frame(gr1)
  df1$strand = as.character(df1$strand)
  df1$strand[df1$strand=="+"] = "p"
  df1$strand[df1$strand=="-"] = "n"  
  df1$Tag = paste0(df1$seqnames, "_", df1$start, "_", df1$strand)
  
  df1$strand[df1$strand=="p"] = "+"
  df1$strand[df1$strand=="n"] = "-" 
  
  gr1 = mutate(gr1, Is_m6A_Atlas = countOverlaps(gr1, atlas, ignore.strand=FALSE))
  df1$Is_m6A_Atlas = gr1$Is_m6A_Atlas
  
  startcol = ncol(df1) + 1
  
  for( j in 1:nrow(tissue_list)){
    if( j != i ){
      FileID=paste0("D:/m6A_Code/Data/HumanTissueSample/MotifSites/[DRACH_motif]",
                    tissue_list[j,],".rds")
      df2=readRDS(FileID)
      # colnames(df2) = c("seqnames", "start", "end", "name", "score", "strand", "motif")
      colnames(df2) = c("seqnames", "start", "end", "strand")
      
      df2 = df2[df2$seqnames=="chr1" |
                  df2$seqnames=="chr2" |
                  df2$seqnames=="chr3" |
                  df2$seqnames=="chr4" |
                  df2$seqnames=="chr5" |
                  df2$seqnames=="chr6" |
                  df2$seqnames=="chr7" |
                  df2$seqnames=="chr8" |
                  df2$seqnames=="chr9" |
                  df2$seqnames=="chr10" |
                  df2$seqnames=="chr11" |
                  df2$seqnames=="chr12" |
                  df2$seqnames=="chr13" |
                  df2$seqnames=="chr14" |
                  df2$seqnames=="chr15" |
                  df2$seqnames=="chr16" |
                  df2$seqnames=="chr17" |
                  df2$seqnames=="chr18" |
                  df2$seqnames=="chr19" |
                  df2$seqnames=="chr20" |
                  df2$seqnames=="chr21" |
                  df2$seqnames=="chr22" |
                  df2$seqnames=="chrX" |
                  df2$seqnames=="chrY",  ]
      
      if( !is.null(df2$name) ){ df2 = df2[!is.na(df2$name), ] }
      
      df2$start = as.numeric(df2$start)
      df2$end = as.numeric(df2$end)
      if( !identical(df2$start, df2$end) ){ df2$start = df2$start + 1 }
      
      df2 = df2[order(df2$start, decreasing = F), ]
      df2 = df2[order(df2$seqnames, decreasing = F), ]
      rownames(df2) = NULL
      
      gr2 = GRanges(df2)
      
      if( !is.null(df2$score) ){gr2 = reduce_ranges_directed( gr1, score=max(score) )
      }else if( is.null(df2$score) ){gr2 = reduce_ranges_directed( gr2 )}
      
      
      gr1 = mutate(gr1, overlap = countOverlaps(gr1, gr2, ignore.strand=FALSE) )
      df1 = cbind(df1, overlap = gr1$overlap )
      colnames(df1)[colnames(df1)=="overlap"]=paste0("Tissue_", tissue_list[j,])
    }
  }
  
  
  for( j in 1:nrow(cell_list)){
      FileID=paste0("D:/m6A_Code/Data/MetDB_CellData/Deep_m6A_Sites/",
                    cell_list[j,],"_ip/CandidateSingleBasePeak.rds")
      df2=readRDS(FileID)
      colnames(df2) = c("seqnames", "start", "end", "name", "score", "strand", "motif")
      
      df2 = df2[df2$seqnames=="chr1" |
                  df2$seqnames=="chr2" |
                  df2$seqnames=="chr3" |
                  df2$seqnames=="chr4" |
                  df2$seqnames=="chr5" |
                  df2$seqnames=="chr6" |
                  df2$seqnames=="chr7" |
                  df2$seqnames=="chr8" |
                  df2$seqnames=="chr9" |
                  df2$seqnames=="chr10" |
                  df2$seqnames=="chr11" |
                  df2$seqnames=="chr12" |
                  df2$seqnames=="chr13" |
                  df2$seqnames=="chr14" |
                  df2$seqnames=="chr15" |
                  df2$seqnames=="chr16" |
                  df2$seqnames=="chr17" |
                  df2$seqnames=="chr18" |
                  df2$seqnames=="chr19" |
                  df2$seqnames=="chr20" |
                  df2$seqnames=="chr21" |
                  df2$seqnames=="chr22" |
                  df2$seqnames=="chrX" |
                  df2$seqnames=="chrY",  ]
      
      df2 = df2[!is.na(df2$name), ]
      
      df2$start = as.numeric(df2$start)
      df2$end = as.numeric(df2$end)
      df2$start = df2$start + 1
      
      df2 = df2[order(df2$start, decreasing = F), ]
      df2 = df2[order(df2$seqnames, decreasing = F), ]
      rownames(df2) = NULL
      
      gr2 = GRanges(df2)
      gr2 = reduce_ranges_directed( gr2, score=max(score) )
      
      gr1 = mutate(gr1, overlap = countOverlaps(gr1, gr2, ignore.strand=FALSE) )
      df1 = cbind(df1, overlap = gr1$overlap )
      colnames(df1)[colnames(df1)=="overlap"]=paste0("Cell_", cell_list[j,])
  }  
  
  
  df1$overlap=rowSums(df1[,c(startcol:ncol(df1))])
  
  df1 = df1[, c(1:(startcol -1), ncol(df1))]
  df1 = cbind(type="tissue", sample=tissue_list[i,], df1)
  combined = rbind.data.frame(combined, df1)
}  

combined$overlap = combined$overlap + 1

combined=combined[order(combined$start, decreasing = F),]
combined=combined[order(combined$seqnames, decreasing = F),]
rownames(combined) = NULL






FileID=paste0(getwd(), "/Cell_48_Deepm6A_Tissue_38_Motif.rds")
saveRDS(combined, file=FileID)




stat=list()
combined$sample = as.factor(combined$sample)
stat[[1]] = data.frame(levels(combined$sample), summary(combined$sample) )
combined = combined[!duplicated(combined$Tag), ]
combined$overlap = as.factor(combined$overlap)
stat[[2]] = data.frame(levels(combined$overlap), summary(combined$overlap) )
write_xlsx(stat, paste0(getwd(),"/Cell_48_Deepm6A_Tissue_38_Motif_stat.xlsx"), 
           col_names = F) 
saveRDS(stat, paste0(getwd(),"/Cell_48_Deepm6A_Tissue_38_Motif_stat.rds") )




##########################################################################

rm(list=ls())
# allsites <- readRDS("D:/m6A_Code/Cell_19_Deepm6A_Tissue_29_Motif.rds")
allsites <- readRDS("D:/m6A_Code/Cell_48_Deepm6A_Tissue_38_Motif.rds")

allsites$Is_m6A_Atlas[allsites$Is_m6A_Atlas==1]=c("Yes")
allsites$Is_m6A_Atlas[allsites$Is_m6A_Atlas==0]=c("No")

MaxNum = 48 + 38


class1 = allsites

tt=paste0("Cell_Deepm6A_Tissue_Motifs_Sample_", MaxNum, "_by_Sample1")
W=10
H=6
class1$sample = as.factor(class1$sample)
data=as.data.frame(table(class1$sample))
colnames(data)=c("sample", "count")
p=ggplot(data, aes(x=sample, y=count, fill=count)) + geom_bar(stat="identity") +
  theme_bw() + 
  labs(title="", x="", y="# of sites") +
  theme(axis.text.x = element_text(angle=65, hjust=1, size=8.5) ) +
  theme(axis.text.y = element_text(size=10) ) +
  geom_text(aes(label=count, angle=90), size=3, fontface="bold", hjust=-0.05) +
  ylim(0, max(data$count)*1.2) +
  theme(legend.position="none")
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)



tt=paste0("Cell_Deepm6A_Tissue_Motifs_Sample_", MaxNum, "_by_Sample2")
W=10
H=5
class4 = class1[class1$Is_m6A_Atlas =="Yes",]
class4$sample = as.factor(class4$sample)
data2=as.data.frame(table(class4$sample))
colnames(data2)=c("sample", "count")
p=ggplot(data2, aes(x=sample, y=count, fill=count)) + geom_bar(stat="identity") +
  theme_bw() + 
  labs(title="", x="", y="# of sites") +
  theme(axis.text.x = element_text(angle=65, hjust=1, size=8.5) ) +
  theme(axis.text.y = element_text(size=10) ) +
  geom_text(aes(label=count, angle=90), size=3, fontface="bold", hjust=-0.05) +
  ylim(0, max(data2$count)*1.2) +
  theme(legend.position="none")
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)


tt=paste0("Cell_Deepm6A_Tissue_Motifs_Sample_", MaxNum, "_by_Sample3")
W=10
H=6
data3=data.frame()
class1$sample = as.factor(class1$sample)
data=as.data.frame(table(class1$sample))
colnames(data)=c("sample", "count")
class4 = class1[class1$Is_m6A_Atlas =="Yes",]
class4$sample = as.factor(class4$sample)
data2=as.data.frame(table(class4$sample))
colnames(data2)=c("sample", "count")
data3=rbind(cbind(class="All_Sites", data),
            cbind(class="m6A_atlas", data2) )
p=ggplot(data3, aes(x=sample, y=count, fill=class)) + geom_bar(stat="identity", position="dodge") +
  theme_bw() + 
  labs(title="", x="", y="# of sites", fill="") +
  theme(axis.text.x = element_text(angle=65, hjust=1, size=9) ) +
  theme(axis.text.y = element_text(size=10) ) +
  geom_text(aes(label=count, angle=90), size=2, fontface="bold", hjust=-0.05, 
            position = position_dodge(width = 0.9) ) +
  ylim(0, max(data3$count)*1.2)  +
  theme(legend.position = "top")
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)



################################################################################


rm(list=ls())
# allsites <- readRDS("D:/m6A_Code/Cell_19_Deepm6A_Tissue_29_Motif.rds")
allsites <- readRDS("D:/m6A_Code/Cell_48_Deepm6A_Tissue_38_Motif.rds")

allsites$Is_m6A_Atlas[allsites$Is_m6A_Atlas==1]=c("Yes")
allsites$Is_m6A_Atlas[allsites$Is_m6A_Atlas==0]=c("No")

MaxNum = 48+38

class1 = allsites
class1 = class1[!duplicated(class1$Tag),]


## Sites_VS_Overlaps
tt=paste0("Cell_Deepm6A_Tissue_Motifs_Sample_", MaxNum, "_Common_Sites1")
W=10
H=5
class1data=as.data.frame(table(class1$overlap))
colnames(class1data)=c("overlap", "count")
class1data$overlap = as.numeric(class1data$overlap) 
p=ggplot(class1data, aes(x=overlap, y=count, fill=count)) + geom_bar(stat="identity") +
  theme_bw() + 
  labs(y="# of sites") +
  theme(axis.text.x = element_text(size=12) ) +
  theme(axis.text.y = element_text(size=12) ) +
  geom_text(aes(label=count, angle=90), size=2.5, fontface="bold", hjust=-0.05) +
  ylim(0, max(class1data$count)*1.2) +
  geom_vline(xintercept=MaxNum*0.85, col="red", linetype = "dashed", size=1, alpha=0.5) +
  annotate("text", x=MaxNum*0.85, y=max(class1data$count), label=c("85% Overlaps")) +
  theme(legend.position="none")
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)


tt=paste0("Cell_Deepm6A_Tissue_Motifs_Sample_", MaxNum, "_Common_Sites2")
W=10
H=5
class4 = class1[class1$Is_m6A_Atlas=="Yes",]
class4data=as.data.frame(table(class4$overlap))
colnames(class4data)=c("overlap", "count")
class4data$overlap = as.numeric(class4data$overlap) 
p=ggplot(class4data, aes(x=overlap, y=count, fill=count)) + geom_bar(stat="identity") +
  theme_bw() + 
  labs(y="# of sites") +
  theme(axis.text.x = element_text(size=12) ) +
  theme(axis.text.y = element_text(size=12) ) +
  geom_text(aes(label=count, angle=90), size=2.5, fontface="bold", hjust=-0.05) +
  ylim(0, max(class4data$count)*1.2) +
  geom_vline(xintercept=MaxNum*0.85, col="red", linetype = "dashed", size=1, alpha=0.5) +
  annotate("text", x=MaxNum*0.85, y=max(class4data$count), label=c("85% Overlaps")) +
  theme(legend.position="none")
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)



tt=paste0("Cell_Deepm6A_Tissue_Motifs_Sample_", MaxNum, "_Common_Sites3")
W=10
H=5
data3=data.frame()
class1data=as.data.frame(table(class1$overlap))
colnames(class1data)=c("overlap", "count")
class1data$overlap = as.numeric(class1data$overlap) 
class4 = class1[class1$Is_m6A_Atlas=="Yes",]
class4data=as.data.frame(table(class4$overlap))
colnames(class4data)=c("overlap", "count")
class4data$overlap = as.numeric(class4data$overlap) 
data3=rbind(cbind(class="allsites", class1data),
            cbind(class="m6Aatlas", class4data) )
# xtick=seq(1:MaxNum)
# xtick = as.character(xtick)
p=ggplot(data3, aes(x=overlap, y=count, fill=class)) + geom_bar(stat="identity", position="dodge") +
  theme_bw() + 
  labs(y="# of sites", fill="") +
  # scale_x_discrete(name ="overlap", limits=xtick) +
  theme(axis.text.x = element_text(face="bold", size=9) ) +
  theme(axis.text.y = element_text(face="bold", size=9) ) +
  geom_text(aes(label=count, angle=90), size=1.5, fontface="bold", hjust=-0.05,
            position=position_dodge(width=1)) +
  ylim(0, max(data3$count)*1.1) +
  geom_vline(xintercept=MaxNum*0.85, col="red", linetype = "dashed", size=1, alpha=0.5) +
  annotate("text", x=MaxNum*0.85, y=max(class1data$count), label=c("85% Overlaps")) +
  theme(legend.position = "top")
saveRDS(p, file=paste0(getwd(),"/[Plot]",tt,".rds"))
ggsave(paste0(getwd(),"/[Plot]", tt, ".png"), plot=p, width=W, height = H)
ggsave(paste0(getwd(),"/[Plot]", tt, ".pdf"), plot=p, width=W, height = H)



















