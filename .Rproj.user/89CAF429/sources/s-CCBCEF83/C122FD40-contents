

# Table1

# "Imputation"=6, 
# "Batch correction"=3, 
# "Clustering, latent representation, dimension reduction, and data augmentation"=6,
# "Multi-functional models (IM: imputation, BC: batch correction, CL: clustering)"=4,
# "Cell type Identification"=4,
# "Function analysis"=2

# App=c(rep("Imputation", 6), 
#       rep("Batch correction", 3), 
#       rep("Clustering, latent representation, dimension reduction, and data augmentation",6),
#       rep("Multi-functional models (IM: imputation, BC: batch correction, CL: clustering)", 4),
#       rep("Cell type Identification", 4),
#       rep("Function analysis",2)
#       )


# App=c("Imputation", 
#       "Batch correction", 
#       "Clustering, latent representation, dimension reduction, and data augmentation",
#       "Multi-functional models (IM: imputation, BC: batch correction, CL: clustering)",
#       "Cell type Identification",
#       "Function analysis"
#       )

Algorithm=c("DCA",
            "SAVER-X",
            "DeepImpute",
            "LATE",
            "scGAMI",
            "scIGANs",
            "BERMUDA",
            "DESC",
            "iMAP",
            "Dhaka",
            "scvis",
            "scVAE",
            "VASC",
            "scDeepCluster",
            "cscGAN",
            "scVI",
            "LDVAE",
            "SAUCIE",
            "scScope",
            "DigitalDLSorter",
            "scCapsNet",
            "netAE",
            "scDGN",
            "CNNC",
            "scGen"
            )

Feature=c("Strongest recovery of the top 500 genes /  
          Choices of noise models, including NB, and ZINB / 
          Outperform other existing methods in capturing cell population structure",
         "Pretraining from existing data sets (transfer learning) / 
         Decomposes the variation into three components", 
         "Divide-and-conquer approach, using a bank of DNN models / 
         Reduced complexity by learning smaller sub-network / 
         Minimized overfitting by removing target genes from input",
         "AE",
         "AE",
         "GAN",
         "AE+TL",
         "AE",
         "AE+GAN",
         "VAE",
         "VAE",
         "VAE",
         "VAE",
         "AE",
         "GAN",
         "VAE",
         "VAE",
         "AE",
         "AE",
         "DNN",
         "CapsNet",
         "VAE",
         "DANN",
         "CNN",
         "VAE"
         )

ApplicationNotes=c("DREMI",
             "t-SNE, ARI",
             "MSE, Pearsonâ€™s correlation",
             "MSE",
             "NMI, ARI, HS and CS",
             "ARI, ACC, AUC, and F-score",
             "kBET, entropy of Mixing, SI",
             "ARI, KL",
             "kBET, LISI",
             "ARI, Spearman Correlation",
             "KNN preservation, log-likelihood",
             "ARI",
             "NMI, ARI, HS, and CS",
             "ARI, NMI, clustering accuracy",
             "t-SNE, marker genes, MMD, AUC",
             "IM: L1 distance; CL: ARI, NMI, SI; BC: Entropy of Mixing",
             "Reconstruction errors",
             "IM: R2 statistics; CL: SI; BC: modified kBET; Visualization: Precision/Recall",
             "IM:Reconstruction errors; BC: Entropy of mixing; CL: ARI",
             "Pearson correlation",
             "Cell-type Prediction accuracy",
            " Cell-type Prediction accuracy, t-SNE for visualization",
             "Prediciton accuracy",
             "AUROC, AUPRC, and accuracy",
             "Correlation, visualization"
             )


table1=data.frame(App="",
                  Algorithm=Algorithm,
                  Feature=Feature,
                  ApplicationNotes=ApplicationNotes
                  )


saveRDS(table1, "./Table/Table1b.rds")



